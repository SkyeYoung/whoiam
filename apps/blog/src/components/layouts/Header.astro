---
import { siteConfig } from '@/configs/site';
import Logo from '@/assets/logo.svg';
import ThemeToggle from './ThemeToggle.astro';

import RiMenuFill from '~icons/ri/menu-fill';
import RiCloseFill from '~icons/ri/close-fill';

const links = [
  {
    label: '标签',
    href: '/tags',
  },
  {
    label: '搜索',
    href: '/search',
  },
  {
    label: '友链',
    href: '/friends',
  },
];
---

<header class="w-full">
  <div class="max-w-3xl mx-auto py-4 px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between">
      <div class="flex items-center">
        <a
          href="/"
          class="text-xl text-gray-900 hover:text-gray-700 dark:text-gray-100 dark:hover:text-gray-300 transition-colors"
          aria-label={siteConfig.title}
        >
          <Logo width={120} height={32} class="sm:w-[140px] sm:h-[40px]" />
        </a>
      </div>

      <nav class="flex items-center space-x-2">
        <div class="hidden md:flex items-center space-x-4">
          {
            links.map((link) => (
              <a
                href={link.href}
                class:list={[
                  'text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100 transition-colors',
                  Astro.url.pathname.includes(link.href) &&
                    'text-gray-900 dark:text-gray-100',
                ]}
              >
                {link.label}
              </a>
            ))
          }
        </div>
        <ThemeToggle />

        <button
          type="button"
          id="mobile-menu-btn"
          class="md:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-theme-primary transition-colors"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <RiMenuFill id="menu-icon" />
          <RiCloseFill id="close-icon" className="hidden" />
        </button>
      </nav>
    </div>

    <div id="mobile-menu" class="hidden">
      <div
        class="z-50 absolute top-12 left-0 w-full px-2 pt-2 pb-3 space-y-1 sm:px-3 border-t border-gray-200 dark:border-gray-700 mt-4 bg-white dark:bg-zinc-900"
      >
        {
          links.map((link) => (
            <a
              href={link.href}
              class:list={[
                'block px-3 py-2 rounded-md text-base font-medium text-gray-500 hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-100 hover:bg-gray-50 dark:hover:bg-gray-800 transition-colors',
                Astro.url.pathname.includes(link.href) &&
                  'text-gray-900 dark:text-gray-100 bg-gray-50 dark:bg-gray-800',
              ]}
            >
              {link.label}
            </a>
          ))
        }
      </div>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle functionality
  document.addEventListener('astro:page-load', () => {
    const btn = document.querySelector('#mobile-menu-btn');
    const menuIcon = btn?.querySelector('#menu-icon');
    const closeIcon = btn?.querySelector('#close-icon');
    const menu = document.querySelector('#mobile-menu');

    if (!btn || !menu || !menuIcon || !closeIcon) return;

    const setMenuStat = (open: boolean) => {
      const act = (v: boolean) => (v ? 'add' : 'remove');
      menu.classList[act(!open)]('hidden');
      menuIcon.classList[act(open)]('hidden');
      closeIcon.classList[act(!open)]('hidden');
      btn.setAttribute('aria-expanded', open.toString());
    };

    btn.addEventListener('click', () => {
      const expanded = btn.getAttribute('aria-expanded') === 'true';
      console.log('isExpanded', expanded);
      setMenuStat(!expanded);
    });

    // Close menu when clicking outside
    document.addEventListener('click', (e) => {
      if (!btn.contains(e.target as Node) && !menu.contains(e.target as Node)) {
        setMenuStat(false);
      }
    });

    // Close menu when resizing to desktop
    window.addEventListener('resize', () => {
      if (window.innerWidth >= 768) {
        setMenuStat(false);
      }
    });
  });
</script>
